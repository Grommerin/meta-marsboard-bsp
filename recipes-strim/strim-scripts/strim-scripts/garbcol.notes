все обновления после версии 1.0.0 записывать тут в формате
DD.MM v1.0.0:
 + что добавлено (функции, параметры, переменные, значения по умолчанию)
 - что удалено (функции, параметры, переменные, значения по умолчанию)
 * что изменено (функции, параметры, переменные, значения по умолчанию)
 ! обратить внимание


19.12 v1.4.1:
 * Исправление в функции Find_older_files:
   FOUND_FILES=$FILE_LIST --> FOUND_FILES=${FILE_LIST}


12.12 v1.4.0:
 - Удалены переменные:
   LOG_SIZE_MAX
 - Из функции Debug_log убрана проверка максимального размера лога
 + Добавлена функция Write_version, которая создает файл с версией скрипта
 + Добавлены переменные:
   SCRIPT_VER - путь к файлу с версией скрипта
 * Изменения в функции Print_start_message:
   при запуске скрипта создается файл .ver с его версией
 * Изменения в опциях запуска скрипта:
   -lt --> -ct, --ctime
 * Исправление в функции Calc_files_params:
   небольшое изменение test в устовии if
 * Исправление в функции Find_older_files:
   небольшое изменение test в устовии while 
   исправление неэкранрованного значения переменной 
 * Исправление в функции Check_parameters:
   небольшое изменение test в устовии while    
 * Изменения в функции Print_def_settings:
   к переменным с размерностью добавлен вывод размерностей
 * В главном цикле исправлены условия в while и test там же


03.12 v1.3.0:
 + Добавлена переменная LOG_SYSTEM в которой хранится адрес общего лога системы
 * Изменено имя переменной лог файла
   LOG_FILE --> LOG_PROG
 * Изменен максимальный размер лог файла
 * Изменена функция Debug_log:
   функция ведет запись сообщений и в системный лог и в свой собственный
   изменена проверка максимального размера лог файла (теперь для системного)
   изменения в алгоритме замены лога после превышения размера (системный лог
   теперь имеет два резервных файла что увеличит время резервирования в 3 раза
   изменен порядок действий внутри функции


02.12 v1.2.1:
 * Изменена строка с советом по использованию скрипта в функции Print_help
 * При вызове скрипта с неизвестным параметром он выводит сообщение с 
   подсказкой и завершает работу


28.11 v1.2.0:
 + Добавлена переменная PROG_VERSION, содержащая строку с версией скрипта в виде
   "v${PROG_VERSION_MAJOR_}.${PROG_VERSION_MINOR_}.${PROG_VERSION_BUILD_}"
 + Добавлена новая поддерживаемая команда
   -v, --version - Вывод сообщения с версией скрипта
 + Добавлена функция Print_version, выводящая номер версии скрипта
 - Удалена функция Start_message_p за ненадобностью
 - Из функции Start_message убрано сообщение в консоль о запуске скрипта
 * Изменен вывод версии скрипта в Print_help
 * Функция Start_message изменена для поддержки вызовов с параметрами и без них
 * Переименована функция Start_message
   Start_message --> Print_start_message


21.11 v1.1.0:
 + функция сообщения в консоль о запуске скрипта с параметрами Start_message_p
 + сообщение в консоль и лог о запуске скрипта когда он вызывается с параметрами
   (параметры запуска записываются в лог)
 + добавлены функции обработки сигналов Sig_quit и Sig_int (завершают работу)
 + добавлена обработка сигналов QUIT, INT, TERM
 + добавлены сообщения в лог о прерывании работы скрипта сигналами QUIT, INT, TERM
 * все операции сравнения между числами заменены на верные (-eq вместо == и т.п.)
 * уточнены названия переменных режимов работы, к ним добавлен префикс MODE_
 * уточнено название флага циклической работы, к нему добавлен префикс FLAG_
 * исправлено описание режимов MODE_ONCE и MODE_CHECK
 * изменены внешние вызовы на современные в функциях
   Check_space
   `df -h /home/ | grep dev | awk '{print $5}' | sed '{s/.$//;}'` 
   --> $(df -h /home/ | grep dev | awk '{print $5}' | sed '{s/.$//;}')
   Debug_log
   `date +%d.%m\ %H.%M.%S` --> $(date +%d.%m\ %H.%M.%S)
 * изменен алгоритм сна скрипта. Теперь засыпание происходит не на установленный
   неразрывный промежуток времени T секунд, а на T промежутков длительностью 1 сек
   (для того что бы сигналы отрабатывались корректно и быстро)
 * все арифметические операции вида $(( $VAR+1 )) и подобные заменены корректными
   POSIX Shell выражениями &(expr ${VAR} + 1) и подобными
 ! в дальнейшем следить за правильными сравнениями (== и подобные только для строк)